openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: Respawn api
    url: https://backend.respawn.in
info:
  description: This is a simple API
  version: "1.0.0"
  title: Respawn API
  contact:
    email: nikhil@respawn.in
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /inventory/{id}:
      get:
        tags:
          - developers
        description: Returns a user based on a single ID, if the user does not have access to the inventory
        operationId: findInventoryById
        parameters:
          - name: id
            in: path
            description: ID of pet to fetch
            required: true
            schema: 
              type: string
              example: iphone-13
        responses:
          '200':
            description: search results matching criteria
            content:
              application/json:
                schema:
                    $ref: '#/components/schemas/InventoryItem'
          '400':
            description: bad input parameter
  /inventory:
    get:
      tags:
        - developers
      summary: searches inventory
      operationId: searchInventory
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
        - in: query
          name: minPrice
          description: minimum price
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: maxPrice
          description: maxPrice price
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: sortBy
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: object
                properties:
                  _metadata:
                    $ref: '#/components/schemas/Metadata'
                  items:
                      type: array
                      items:
                        $ref: '#/components/schemas/InventoryItem'
        '400':
          description: bad input parameter
    post:
      tags:
        - admins
      summary: adds an inventory item
      operationId: addInventory
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        description: Inventory item to add
components:
  schemas:
    InventoryItem:
      type: object
      required:
        - id
        - name
        - price
        - createdOn
        - currency
        - shortDescription
        - longDescription
      properties:
        id:
          type: string
          format: uuid
          example: iphone-13
        name:
          type: string
          example: Iphone 13
        createdOn:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        currency: 
          type: string
          example: USD
        isFavorite:
          type: boolean
          example: true
        manufacturer:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: apple
            name:
              type: string
              example: Apple
        shortDescription:
          type: string
          example: this is a short description
        longDescription:
          type: string
          example: <div>this is a very long discription in html format</div>
        price:
          type: integer
          example: 400
        offer:
          type: integer
          example: 300
        size:
            type: array
            items: 
              properties:
                id:
                  type: string
                  format: uuid
                  example: iphone-13-512gb
                price:
                  type: integer
                  example: 400
                name:
                  type: string
                  example: 512GB
        colors:
            type: array
            items: 
              properties:
                id:
                  type: string
                  format: uuid
                  example: iphone-13-black
                price:
                  type: integer
                  example: 400
                name:
                  type: string
                  example: Black
                color:
                  type: string
                  example: '#000000'
        styles:
            type: array
            items: 
              properties:
                id:
                  type: string
                  format: uuid
                  example: iphone-13-with-airpods
                price:
                  type: integer
                  example: 400
                name:
                  type: string
                  example: with airpods
                
    Metadata: 
      type: object
      required:
        - count
        - offset
        - limit
      properties:
        count:
          type: integer
          example: 50
        offset:
          type: integer
          example: 0
        limit:
          type: integer
          example: 10